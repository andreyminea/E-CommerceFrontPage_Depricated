@implements IDisposable
@inject CartService cart
@inject FavoritesService fav

<MudGrid Spacing="10" Justify="Justify.Center">
    <MudItem xs="12" sm="12" md="4" lg="4" xl="4">
        <img src="images/logo.png" style="width:210px; height:70px;">
    </MudItem>
    <MudItem xs="12" sm="6" md="4" lg="4" xl="4" Style="vertical-align:central">
        <MudInput Style="margin-top:10px; border:outset; border-color: gray; border-width: 1px; border-radius:20px; padding:5px; padding-left:20px; padding-right:20px; width: 300px" 
                  AdornmentIcon="@Icons.Material.Search" Adornment="Adornment.End"
                  DisableUnderLine="true" FullWidth="true" T="string" Placeholder="Cauta ce iti doresti"
                  OnAdornmentClick="()=> { }" IconSize="Size.Large" />
    </MudItem>
    <MudItem xs="12" sm="6" md="4" lg="4" xl="4" Style="vertical-align: central; text-align:end;">
        <MudBadge Color="Color.Success" Overlap="true" Content="@fav.GetDataCount()">
            <MudIconButton Icon="@Icons.Material.Favorite" Size="Size.Large" Color="Color.Error"></MudIconButton>
        </MudBadge>
        <MudBadge Color="Color.Success" Overlap="true" Content="@cart.GetDataCount()">
            <MudIconButton Icon="@Icons.Material.ShoppingCart" Size="Size.Large" Color="Color.Primary"></MudIconButton>
        </MudBadge>
    </MudItem>

</MudGrid>

@code {
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        await cart.GetAllDataAsync();
        await fav.GetAllDataAsync();
        cart.ChangeNotification += Refresh;
        fav.ChangeNotification += Refresh;
        this.StateHasChanged();
    }
    // 

    public void Refresh()
    {
        this.StateHasChanged();
    }

    public void Dispose()
    {
        cart.ChangeNotification -= Refresh;
        fav.ChangeNotification -= Refresh;
    }
}
